/**
 * Copyright (c) 2024 Apoorv Gupta
 * All rights reserved.
 */

plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.dagger.hilt)
    alias(libs.plugins.jetbrains.kotlin.kapt)
}

android {
    // Define the package namespace for the feature module
    namespace 'com.apoorvgupta.newsshots.bookmark'

    // Set the compile SDK version
    compileSdk BuildConfig.compileSdk

    defaultConfig {
        // Configure default settings such as minSdk, targetSdk, and test runner
        minSdk BuildConfig.minSdk
        targetSdk BuildConfig.targetSdk
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        // Enable Jetpack Compose features
        compose true
    }

    composeOptions {
        // Set the Kotlin compiler extension version for Jetpack Compose
        kotlinCompilerExtensionVersion BuildConfig.kotlinCompilerExtensionVersion
    }

    buildTypes {
        // Configure release build type
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        // Set source and target compatibility to Java 17
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        // Set the JVM target for Kotlin
        jvmTarget = BuildConfig.jvmTarget
    }
}

dependencies {
    // Core, Capabilities Integration in Feature Modules
    implementation project(':core')
    implementation project(':capabilities')

    // UI dependencies
    implementation libs.androidx.ui
    implementation libs.androidx.material3
    implementation libs.androidx.activity.compose

    // Navigation
    implementation libs.androidx.navigation.compose

    // Dagger Hilt for dependency injection
    implementation libs.hilt.android
    kapt libs.hilt.android.compiler

    // Testing dependencies
    testImplementation libs.junit

    // Gson
    implementation libs.gson

    // Image Loading library
    implementation libs.coil.compose
}
